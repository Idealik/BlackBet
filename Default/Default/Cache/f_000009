var popupRemoveTimeout;
var user_top_sites;
var standart_top_sites;
var index_top_mas;

function randomInt(min, max) {
    min = Math.ceil(min);
    max = Math.floor(max);
    return Math.floor(Math.random() * (max - min)) + min;
}

function RemoveTopSitePopups() {
    $('.ntc-bubble').remove();
    $('.icon-tab.with-popup').removeClass('with-popup');
}

function ShowPopupForTopSite(dom, domen) {
    var site;
    
    if ($(dom).is('.with-popup'))
    {
        return false;
    }
    
    var lang = _current_lang;
    if (!_topSites[_current_lang])
    {
        lang = _default_lang;
    }
    for (var i = 0, l = _topSites[lang].length; i < l; i++)
    {
        if (_topSites[lang][i].url == domen)
        {
            site = _topSites[lang][i];
            break;
        }
    }
    if (!site || !site.additional)
    {
        return true;
    }
    
    popupRemoveTimeout && clearTimeout(popupRemoveTimeout);
    RemoveTopSitePopups();
    
    var popup;
    if (site.additional.type == 'ext_unblock')
    {
        popup = $('<div class="ntc-bubble ntc-bubble--visible">\
      <p class="ntc-text">' + getLocalized('blocked_site_notif') + '</p>\
      <div class="ntc-buttons">\
        <a href="' + site.additional.ext_url + '" class="ntc-btn ntc-btn--dark single" target="_blank">' + getLocalized('install_extension') + '</a>\
      </div>\
    </div>');
    }
    else if (site.additional.type == 'ext_offer')
    {
        var text = getLocalized('ext_offer_notif');
        text = text.replace(/\{0\}/, '<span class="ntc-link">' + site.url + '</span>');
        text = text.replace(/\{1\}/, '<span class="ntc-link">' + site.additional.ext_title + '</span>');
        popup = $('<div class="ntc-bubble ntc-bubble--visible">\
          <p class="ntc-text">' + text + '</p>\
          <div class="ntc-buttons">\
            <a href="' + site.additional.ext_url + '" class="ntc-btn ntc-btn--dark" target="_blank">' + getLocalized('install_extension') + '</a>\
            <a href="' + site.additional.url + '" class="ntc-btn" target="_blank">' + getLocalized('goto_site') + '</a>\
          </div>\
        </div>');
    }
    popup.css('opacity', '0');
    
    var dontShowCheckbox = $('<label class="ntc-not_show_again"><input type="checkbox">' + getLocalized('dont_show_message_again') + '</label>');
    dontShowCheckbox.on('click', function() {
        if (this.children[0].checked)
        {
            dom.setAttribute('onclick', 'return trackOutboundLink(this);');
            localStorage && localStorage.setItem(domen + 'Popup', 'disabled');
        }
        else
        {
            dom.setAttribute('onclick', 'return ShowPopupForTopSite(this, "' + site.url + '");');
            localStorage && localStorage.setItem(domen + 'Popup', 'enabled');
        }
    });
    popup.append(dontShowCheckbox);
    
    $(dom).addClass('with-popup');
    var dom_pos = $(dom).offset();
    $('body').append(popup);
    popup.css('left', dom_pos.left + 24);
    popup.css('top', dom_pos.top + $(dom).height());
    setTimeout(function() {
        popup.css('opacity', '1');
    }, 100);
    
    var onPopupMouseOut = function(e) {
        popupRemoveTimeout && clearTimeout(popupRemoveTimeout);
        popupRemoveTimeout = setTimeout(RemoveTopSitePopups, 500);
        popup.one('mouseover', onPopupMouseOver);
    }
    var onPopupMouseOver = function(e) {
        popupRemoveTimeout && clearTimeout(popupRemoveTimeout);
        popup.one('mouseout', onPopupMouseOut);
    }
    
    popup.one('mouseover', onPopupMouseOver);
    $(dom).one('mouseout', function() {
        popupRemoveTimeout = setTimeout(RemoveTopSitePopups, 500);
    });
    
    return false;
}

function CheckBlockedTopSites() {
    var lang = _current_lang;
    if (!_topSites[_current_lang])
    {
        lang = _default_lang;
    }
    for (var i = 0, l = _topSites[lang].length; i < l; i++)
    {
        if (_topSites[lang][i].additional)
        {
            (function(site) {
                if (site.additional.type == 'ext_unblock')
                {
                    var favicon = document.createElement('img');
                    favicon.onerror = function() {
                        var site_dom = document.querySelector('a[data-title="' + site.url + '"]');
                        var site_img_dom = document.querySelector('a[data-title="' + site.url + '"] img');
                        if (site_dom && site_img_dom)
                        {
                            site_img_dom.setAttribute("src", site.additional.icon);
                            if (!localStorage || localStorage[site.url + 'Popup'] != 'disabled')
                            {
                                site_dom.setAttribute('onclick', 'return ShowPopupForTopSite(this, "' + site.url + '");');
                            }
                        }
                    }
                    favicon.src = "https://" + site.url + "/favicon.ico?" + Math.random();
                }
                else if (site.additional.type == 'ext_offer' && (!localStorage || localStorage[site.url + 'Popup'] != 'disabled'))
                {
                    var site_dom = document.querySelector('a[data-title="' + site.url + '"]');
                    if (site_dom)
                    {
                        site_dom.setAttribute('onclick', 'return ShowPopupForTopSite(this, "' + site.url + '");');
                    }
                }
                
            })(_topSites[lang][i]);
        }
    }
}

function saveTopSites() {
    if (localStorage)
    {
        try
        {
            localStorage.setItem('user_top_sites', JSON.stringify(user_top_sites));
            localStorage.setItem('index_top_mas_' + _current_lang, JSON.stringify(index_top_mas));
        }
        catch (e) {}
    }
}

function getTopSites() {
    if (localStorage)
    {
        user_top_sites = localStorage.getItem('user_top_sites');
        if (user_top_sites)
        {
            user_top_sites = JSON.parse(user_top_sites);
        }
        var standart_top_sites_arr = _topSites[_current_lang] || _topSites[_default_lang];
        standart_top_sites = {};
        for (var i = 0; i < standart_top_sites_arr.length; i++) {
            standart_top_sites[standart_top_sites_arr[i].url] = standart_top_sites_arr[i];
        }
        index_top_mas = localStorage.getItem('index_top_mas_' + _current_lang);
        if (index_top_mas)
        {
            index_top_mas = JSON.parse(index_top_mas);
        }
    }
    
    if (!user_top_sites)
    {
        user_top_sites = {};
    }
    
    if (!index_top_mas)
    {
        index_top_mas = [];
        for (var i in standart_top_sites)
        {
            index_top_mas.push(i);
        }
        for (var i in user_top_sites)
        {
            index_top_mas.push(i);
        }
    }
    else
    {
        for (var i = 0; i < index_top_mas.length; i++)
        {
            var key = index_top_mas[i];
            if (!standart_top_sites[key] && !user_top_sites[key])
            {
                index_top_mas.removeElement(key);
            }
        }
        for (var i in user_top_sites)
        {
            if (index_top_mas.indexOf(i) < 0)
            {
                index_top_mas.push(i);
            }
        }
        for (var i in standart_top_sites)
        {
            if (standart_top_sites[i].important && index_top_mas.indexOf(i) < 0)
            {
                index_top_mas.push(i);
            }
        }
    }
    
    // add_button must be always at the end
    for (var i = 0; i < index_top_mas.length; i++)
    {
        if (index_top_mas[i] == 'add_button')
        {
            index_top_mas.push(index_top_mas.splice(i, 1)[0]);
            break;
        }
    }
}

function updateTopSites() {
    var parent = $('.section-icon-tabs .grid-wrapper .grid');
    var section_wraps = $('.section-icon-tabs .grid__item');
    section_wraps.remove();
    var section_parent;
    $('.new-icon-tab-adding').hide();
    $('.section-icon-tabs').removeClass('adding');
    
    var image_for_checking;
    function check_image(url, success, error) {
        image_for_checking = document.createElement('img');
        image_for_checking.onerror = error;
        image_for_checking.onload = success;
        image_for_checking.src = url;
    }
    
    function stop_image_checking() {
        if (image_for_checking)
        {
            image_for_checking.onerror = null;
            image_for_checking.onload = null;
            image_for_checking = null;
        }
    }
    
    function show_top_tab_adding_panel() {
        stop_image_checking();
        $('.new-icon-tab-adding__form .btn').text(getLocalized('add'));
        $('.new-icon-tab-adding__form .form-url-td .input').attr('placeholder', getLocalized('enter_url'));
        $('.new-icon-tab-adding__form .form-icon-td .input').attr('placeholder', getLocalized('icon_to_url'));
        
        $('.new-icon-tab-adding__form form .input').val('');
        $('.new-icon-tab-adding__form .error-text').remove();
        $('.new-icon-tab-adding__form .btn, .new-icon-tab-adding__form .input').attr('disabled', false);
        setTimeout(function() {$('.new-icon-tab-adding__form .form-url-td .input').focus();});
        $('.section-icon-tabs').addClass('adding');
        $('.new-icon-tab-adding').slideDown();
    }
    
    function hide_top_tab_adding_panel() {
        stop_image_checking();
        $('.new-icon-tab-adding').slideUp(400, function() {
            $('.section-icon-tabs').removeClass('adding');
        });
    }
    
    function add_top_tab_dom(data, deletable, site_id) {
        var section_parent = $('.section-icon-tabs .icon-tabs-group').last();
        if (!section_parent.length || section_parent.find('.icon-tab').length >= 3)
        {
            section_parent = $('<div class="grid__item"><div class="icon-tabs-group"></div></div>');
            parent.append(section_parent);
            section_parent = section_parent.find('.icon-tabs-group');
        }
        var icon_tab;
        if (data.isAddButton)
        {
            icon_tab = $(
                '<a class="icon-tab icon-tab-add not-movable" href="#">\
                    <div class="icon-tab-add-img">\
                        <img src="img/icon-add.png">\
                    </div>\
                    <div class="icon-tab-add-connector"></div>\
                </a>');
            icon_tab.on('click', function(e) {
                e.preventDefault();
                if ($('.section-icon-tabs').is('.adding'))
                {
                    hide_top_tab_adding_panel();
                }
                else
                {
                    show_top_tab_adding_panel();
                }
            });
        }
        else
        {
            var href = data.url;
            if (href && href.indexOf('http') < 0)
            {
                href = 'https://' + href;
            }
            icon_tab = $(
                '<a class="icon-tab ' + (deletable ? 'deletable' : '') + ' ' + (data['class'] ? data['class'] : '') + '" onclick="return trackOutboundLink(this);" href="' + href + '" data-title="' + data.url + '" target="_blank">\
                    <div class="image" style="background-image:url(' + data.icon + ')" alt=""></div>\
                    ' + (deletable ? '<img src="img/close-icon.png" class="close-icon">' : '') + '\
                </a>');
            icon_tab.find('.close-icon').on('click', function(e) {
                e.preventDefault();
                e.stopPropagation();
                
                remove_top_tab($(this).parent('.icon-tab'));
            });
        }
        icon_tab.attr('id', site_id || data.url);
        
        // add_button must be always at the end
        if (parent.find('.icon-tab').last().is('.icon-tab-add'))
        {
            icon_tab.insertBefore(parent.find('.icon-tab').last());
        }
        else
        {
            section_parent.append(icon_tab);
        }
    }
    
    function remove_top_tab(tab_dom) {
        var id = tab_dom.attr('id') || '';
        delete user_top_sites[id];
        tab_dom.remove();
        update_indexes();
        saveTopSites();
        division_by_three();
        var section_parent = $('.section-icon-tabs .grid__item').last();
        if (section_parent.length && !section_parent.find('.icon-tab').length)
        {
            section_parent.remove();
        }
        make_sortable();
    }
    
    function add_top_tab(tab_id, tab_data) {
        user_top_sites[tab_id] = tab_data;
        add_top_tab_dom(user_top_sites[tab_id], true, tab_id);
        update_indexes();
        saveTopSites();
        division_by_three();
        make_sortable();
    }
    
    function update_indexes() {
        var top_tabs = $('.section-icon-tabs .icon-tab');
        index_top_mas = [];
        for (var i = 0; i < top_tabs.length; i++)
        {
            index_top_mas.push(top_tabs[i].id);
            top_tabs[i].style.zIndex = (top_tabs.length - i);
            top_tabs[i].setAttribute('index', i);
        }
    }
    
    function division_by_three() {
        var top_tabs = $('.section-icon-tabs .icon-tab:not(.ui-sortable-helper)');
        for (var i = 0; i < top_tabs.length; i++)
        {
            if ($(top_tabs[i]).is('.not-movable'))
            {
                var index = $(top_tabs[i]).attr('index');
                if (index != i && index <= top_tabs.length)
                {
                    if (i < index)
                    {
                        $(top_tabs[i]).insertAfter($(top_tabs[index]));
                    }
                    else
                    {
                        $(top_tabs[i]).insertBefore($(top_tabs[index]));
                    }
                    top_tabs = $('.section-icon-tabs .icon-tab.ui-sortable-helper');
                }
            }
        }
        
        var sections = $('.icon-tabs-group');
        for (var i = 0; i < sections.length; i++)
        {
            var tabs = $(sections[i]).find('.icon-tab:not(.ui-sortable-helper)');
            if (tabs.length < 3 && i < sections.length - 1)
            {
                $(sections[i]).append($(sections[i + 1]).find('.icon-tab:not(.ui-sortable-helper)').first());
            }
        }
        for (var i = 0; i < sections.length; i++)
        {
            var tabs = $(sections[i]).find('.icon-tab:not(.ui-sortable-helper)');
            if (tabs.length > 3 && i < sections.length - 1)
            {
                $(sections[i + 1]).prepend($(sections[i]).find('.icon-tab:not(.ui-sortable-helper)').last());
            }
        }
    }
    
    function make_sortable() {
        $('.icon-tabs-group').sortable({
            items: '.icon-tab:not(.not-movable)',
            connectWith: '.icon-tabs-group',
            change: division_by_three,
            stop: function(event, ui) {
                update_indexes();
                saveTopSites();
            }
        });
    }
    
    function is_valid_link(text) {
        text = text.trim();
        if (!window.getBaseDomainName || !window.fastGetHostName)
        {
            return !!text;
        }
        
        if (!/^https?:\/\//i.test(text))
        {
            text = 'http://' + text;
        }
        return !!(window.getBaseDomainName(window.fastGetHostName(text)));
    }
    
    for (var i = 0, l = index_top_mas.length; i < l; i++)
    {
        var cur_site = standart_top_sites[index_top_mas[i]] || user_top_sites[index_top_mas[i]];
        if (!cur_site) continue;
        
        add_top_tab_dom(cur_site, true, index_top_mas[i]);
    }
    update_indexes();
    division_by_three();
    make_sortable();
    
    if (!window.topTabHasListeners)
    {
        window.topTabHasListeners = true;
        $('.new-icon-tab-adding__form form').on('submit', function(e) {
            e.preventDefault();
            $('.new-icon-tab-adding__form .error-text').remove();
            var site_url = $('.new-icon-tab-adding__form .form-url-td .input').val().trim();
            var icon_url = $('.new-icon-tab-adding__form .form-icon-td .input').val().trim();
            var tab_class = undefined;
            var is_valid_site_url = is_valid_link(site_url);

            function continue_adding() {
                if (is_valid_site_url)
                {
                    add_top_tab('site' + Math.random(), {'url': site_url, 'icon': icon_url, 'class': tab_class});
                    $('a.icon-tab-add').click();
                }
            }

            if (!is_valid_site_url)
            {
                $('.new-icon-tab-adding__form .form-url-td').append('<div class="error-text">' + (site_url ? getLocalized('enter_correct_url') : getLocalized('enter_url')) + '</div>');
                $('.new-icon-tab-adding__form .form-url-td .input').focus();
            }
            if (icon_url)
            {
                $('.new-icon-tab-adding__form .btn, .new-icon-tab-adding__form .input').attr('disabled', true);
                check_image(icon_url, function on_success() {
                    $('.new-icon-tab-adding__form .btn, .new-icon-tab-adding__form .input').attr('disabled', false);
                    $('.new-icon-tab-adding__form .form-icon-td .error-text').remove();
                    continue_adding();
                }, function on_error() {
                    $('.new-icon-tab-adding__form .btn, .new-icon-tab-adding__form .input').attr('disabled', false);
                    $('.new-icon-tab-adding__form .form-icon-td .error-text').remove();
                    $('.new-icon-tab-adding__form .form-icon-td').append('<div class="error-text">' + getLocalized('error_loading_icon') + '</div>');
                    $('.new-icon-tab-adding__form .form-icon-td .input').focus();
                });
            }
            else
            {
                tab_class = 'default-top color' + randomInt(0, 13);
                continue_adding();
            }
        });
    }
}

var isGoogleChrome = !(window.navigator.userAgent.replace(/(Mozilla|AppleWebKit|Chrome|Safari)\//g, '').match(/\//g));

isGoogleChrome && document.addEventListener("DOMContentLoaded", function() {
    CheckBlockedTopSites();
    
    var target = $('.section-icon-tabs .grid-wrapper .grid');
    var observer = new MutationObserver(CheckBlockedTopSites);
    target.length && observer.observe(target[0], {childList: true});
});