var getScreenApi = 'https://mini.s-shot.ru/1024x673/328/?';
var user_sites;
var standart_sites;
var index_mas;
var plus_btn;
var popular_sites_div;
var current_searcher = 'google';
var suggestions;
var is_rus_locale = /^(ru|be|uk|ky|ab|mo|et|lv)$/i.test((navigator.language || navigator.systemLanguage || navigator.userLanguage || 'en').substr(0, 2).toLowerCase());

var searchEngines = {
    google: {
        'search': {
            url: typeof Object.freeze !== "undefined" ? "s.html" : "https://www.google.ru/search",
            value_name: "q"
        },
        'suggest': {
            url: "https://www.google.com/complete/search",
            value_name: "q",
            params: {
                "client": "chrome"
            },
            parse: function(json) {
                var suggests_array = [];

                json = json[1];
                for (var i = 0, l = json.length; i < l; i++)
                {
                    if (!(json[i] instanceof Array))
                    {
                        suggests_array.push({term: json[i]});
                    }
                }
                return suggests_array;
            }
        },
        'class': "search-dropdown__ico_google"
    }
};

function setTopWindowLocation(url) {
    var link = $('<a href="' + url + '" target="_top">link</a>')[0];
    if (typeof document.createEvent != "undefined")
    {
        var event = document.createEvent('MouseEvents');
        event.initEvent('click', true, true);
        link.dispatchEvent(event);
    }
    else
    {
        link.click();
    }
}

function trackOutboundLink(obj) {
    if ($(obj).parents('.hided').length)
    {
        return;
    }
    
    var url = obj.href;
    trackOutboundURL(url, function() {
        var target_attr = obj.getAttribute('target');
        switch (target_attr)
        {
            case '_blank':
                break;
            case '_top':
                setTopWindowLocation(url);
                break;
            default:
                document.location.href = url;
        }
    }, 'outbound_other');
    return obj.getAttribute('target') === '_blank';
}

function saveSites() {
    if (localStorage)
    {
        try
        {
            localStorage.setItem('user_sites', JSON.stringify(user_sites));
            localStorage.setItem('standart_sites_' + _current_lang, JSON.stringify(standart_sites));
            localStorage.setItem('index_mas_' + _current_lang, JSON.stringify(index_mas));
        }
        catch (e) {}
    }
}

function getSites() {
    if (localStorage)
    {
        user_sites = localStorage.getItem('user_sites');
        if (user_sites)
        {
            user_sites = JSON.parse(user_sites);
        }
        standart_sites = localStorage.getItem('standart_sites_' + _current_lang);
        if (standart_sites)
        {
            standart_sites = JSON.parse(standart_sites);
        }
        index_mas = localStorage.getItem('index_mas_' + _current_lang);
        if (index_mas)
        {
            index_mas = JSON.parse(index_mas);
        }
    }
    
    if (!user_sites)
    {
        user_sites = {};
    }
    
    if (!standart_sites)
    {
        standart_sites = {};
    }
    
    for(var site_url in standart_sites)
    {
        var site = standart_sites[site_url];
        if (!_standart_sites[_current_lang][site.site_name])
        {
            delete standart_sites[site_url];
        }
        else if (site.url != _standart_sites[_current_lang][site.site_name].url)
        {
            if (index_mas) 
            {
                var ind = index_mas.indexOf(site.url);
                if (ind >= 0)
                {
                    index_mas[ind] = _standart_sites[_current_lang][site.site_name].url;
                }
            }
            delete standart_sites[site_url];
        }
    }
    for (var site_name in _standart_sites[_current_lang])
    {
        var site = _standart_sites[_current_lang][site_name];
        if (!standart_sites[site.url])
        {
            site["site_name"] = site_name;
            standart_sites[site.url] = site;
        }
    }
    
    if (!index_mas)
    {
        index_mas = [];
        for (var i in standart_sites)
        {
            index_mas.push(i);
        }
        for (var i in user_sites)
        {
            index_mas.push(i);
        }
    }
    else
    {
        for (var i = 0; i < index_mas.length; i++)
        {
            var key = index_mas[i];
            if (!standart_sites[key] && !user_sites[key])
            {
                index_mas.removeElement(key);
            }
        }
        for (var i in user_sites)
        {
            if (index_mas.indexOf(i) < 0)
            {
                index_mas.push(i);
            }
        }
        for (var i in standart_sites)
        {
            if (index_mas.indexOf(i) < 0)
            {
                index_mas.push(i);
            }
        }
    }
}

function openUrl(url, inNewTab) {
    if (url.length > 1)
    {
        if (url.substr(0, 7) != 'http://' && url.substr(0, 8) != 'https://')
        {
            url = "http://" + url;
        }
        window.open(url, inNewTab ? '_blank' : '_self');
    }
}

function setSearchEngine(name, do_not_save) {
    if (!name || !searchEngines[name])
    {
        return;
    }

    current_searcher = searchEngines[name];

    var form = $('#search_form');
    var input = $('#search_form .input');
    var add_options = form.find('.add_options');
    add_options && add_options.remove();
    
    if (current_searcher.search.params) 
    {
        var add_nodes = '<div class="add_options">';
        for (var key in current_searcher.search.params)
        {
            add_nodes += '<input type="hidden" name="' + key + '" value="' + current_searcher.search.params[key] + '">'
        }
        add_nodes += '</div>';
        form.append($(add_nodes));
    }

    form.attr('action', current_searcher.search.url);
    input.attr('name', current_searcher.search.value_name);
    input.focus();

    if (!do_not_save)
    {
        localStorage && localStorage.setItem('searchEngine', name);
        setCookie('currentSearchEngine', name, {expires: 60 * 60 * 24 * 365});
    }
    else if (!window.is_typ)
    {
        setCookie('currentSearchEngine', name, {expires: 60 * 60 * 24 * 365});
    }
}

function freeSearchField() {
    suggestions && suggestions.hide();
    $('#search_form .input').focus();
}

function search(_this) {
    var search_str = $('#search_form .input').val();
    search_str = search_str.trim();
    var result = false;
    
    window.searchHistory && searchHistory.add(search_str);
    
    if ($('#search_form').hasClass('is_url'))
    {
        trackOutboundURL($('#search_form').attr('data_url'), function() {
            window.top.location.href = $('#search_form').attr('data_url');
        }, 'outbound_search');
        return false;
    }
    
    if (search_str)
    {
        setTimeout(function() {
            freeSearchField();
            suggestions.stop();
        }, 0);
        result = true;
    }
    else
    {
        result = false;
    }
    
    var query_string = $(_this).serialize();
    var searcher = _this.action;
    if (result && searcher && query_string)
    {
        var search_url_query = searcher + '?' + query_string;
        trackOutboundURL(search_url_query, function() {
            var target_attr = _this.getAttribute('target');
            switch (target_attr)
            {
                case '_blank':
                    break;
                case '_top':
                    setTopWindowLocation(search_url_query);
                    break;
                default:
                    document.location.href = search_url_query;
            }
        }, 'outbound_search');
        return _this.getAttribute('target') === '_blank';
    }
    
    return result;
}

function tryGetUrl(string) {
    string = string.trim();
    var resultURL = '';
    switch (string)
    {
        case 'youtube':
            resultURL = 'https://www.youtube.com/';
            break;
        case 'ютуб':
            resultURL = 'https://www.youtube.com/';
            break;
        case 'google':
            resultURL = 'https://www.google.com/';
            break;
        case 'вк':
            resultURL = 'https://vk.com/';
            break;
        case 'facebook':
            resultURL = 'https://www.facebook.com/';
            break;
        case 'fb':
            resultURL = 'https://www.facebook.com/';
            break;
        case 'gmail':
            resultURL = 'https://mail.google.com';
            break;
        case 'яндекс':
            resultURL = 'https://yandex.ru/?clid=2296555';
            break;
        default:
            if (/(https?|ftp):\/\//.test(string))
            {
                resultURL = string.replace(' ', '%20');
            }
            else if (/^([а-яa-z0-9-_]+)(\.[а-яa-z0-9-_]+)*\.(biz|com|edu|gov|info|net|org|de|uk|cn|ru|eu|travel|club|рф|sc|pro|ua|by|kz)(\/[а-яa-z0-9-_]+)*(?:\/?)$/i.test(string) ||
                    /^((?:25[0-5]|2[0-4]\d|[01]?\d\d?)(\.(?=\d)|[\/:?#]|$)){4}/i.test(string))
            {
                resultURL = 'http://' + string;
            }
            break;
    }
    return resultURL;
}

function set_Data_URL_for_form_if_need(string) {
    var resultURL = tryGetUrl(string);
    
    if (resultURL)
    {
        $("#search_form").addClass('is_url');
        $("#search_form").attr('data_url', resultURL);
        return true;
    }
    else
    {
        $("#search_form").removeClass('is_url');
        $("#search_form").attr('data_url', '');
        return false;
    }
}

function toogleAddingTabPanel() {
    var plusTab = $(".preview-tab_new").toggleClass("preview-tab_new_active");
    $(".new-tab-adding").slideToggle();
    if (plusTab.hasClass("preview-tab_new_active"))
    {
        $('html, body').animate({
            scrollTop: $('.new-tab-adding').offset().top
        }, 400);
        $('.new-tab-adding__input-wrapper input').focus().val('');
        if (!$('.hided').length)
        {
            $('.popupar_heading').css('display', 'none');
        }
        else
        {
            $('.popupar_heading').css('display', '');
        }
    }
}

function init_suggestions() {
    var autocomplete_id = 0;
    var pause = false;
    var lastTerm = "";
    var curTerm = "";
    var current_suggestions = [];
    var last_loaded_web_suggestions = [];
    
    // Search
    var search_form = $("#search_form");
    var search_input = $("#search_form .input");
    var search_button = $("#search_form .search-bar__submit");
    var autocomplete = $("#autocomplete");
    
    function onSuggestionSelect(suggestion_dom) {
        search_form.removeAttr('autofill');
        var s1 = $(suggestion_dom).attr('data');
        set_Data_URL_for_form_if_need(s1);
        search_input.val(s1);
    }
    
    function show(suggests_array) {
        suggests_array.length && autocomplete.removeClass('hidden');
        for (var i = 0; i < suggests_array.length; i++)
        {
            var url = suggests_array[i].url || tryGetUrl(suggests_array[i].term);
            var s1text = suggests_array[i].term;
            var s2text = suggests_array[i].title || '';
            var suggest_dom = document.createElement('div');
            suggest_dom.className = 'autocomplete_element';
            suggest_dom.setAttribute('data', url || suggests_array[i].term);
            var s1text_dom = document.createElement('span');
            s1text_dom.className = 's1';
            s1text_dom.textContent = s1text;
            if (url)
            {
                s1text_dom.classList.add('link');
                var favicon = document.createElement('img');
                favicon.src = 'https://www.google.com/s2/favicons?domain=' + encodeURIComponent(url);
                suggest_dom.appendChild(favicon);
            }
            if (s2text)
            {
                var s2text_dom = document.createElement('span');
                s2text_dom.className = 's2';
                s2text_dom.textContent = s2text;
                var dash_dom = document.createElement('span');
                dash_dom.className = 'dash';
                dash_dom.textContent = '—';
                suggest_dom.appendChild(s2text_dom);
                suggest_dom.appendChild(dash_dom);
            }
            else
            {
                s1text_dom.classList.add('full');
            }
            suggest_dom.appendChild(s1text_dom);
            
            current_suggestions.push(suggests_array[i]);
            var auto = $(suggest_dom);
            autocomplete.append(auto);
            auto.on("click", function() {
                onSuggestionSelect(this);
                search_button.click();
            });
        }
    }
    
    function hide() {
        autocomplete.addClass('hidden');
        autocomplete.empty();
        autocomplete_id = 0;
        current_suggestions = [];
        curTerm = search_input.val();
    }
    
    function autoFill(suggestion) {
        var start_pos = search_input.val().length;
        var end_pos = suggestion.length;
        search_input.val(suggestion);
        
        if (search_input[0].setSelectionRange)
        {
            search_input[0].setSelectionRange(start_pos, end_pos, "backward");
        }
        else if (search_input[0].createTextRange)
        {
            var selRange = search_input[0].createTextRange();
            selRange.collapse(true);
            selRange.moveStart('character', start_pos);
            selRange.moveEnd('character', end_pos);
            selRange.select();
        }
        else if (typeof search_input[0].selectionStart)
        {
            search_input[0].selectionStart = start_pos;
            search_input[0].selectionEnd = end_pos;
        }
    }
    
    function findSuggestions(term) {
        search_form.removeAttr('autofill');
        if (lastTerm == term) 
        {
            return;
        }
        lastTerm = curTerm;
        hide();
        if (term !== '' && !pause)
        {
            curTerm = term;
        //    show([{term: term}]);
            
            var suggests_array = window.searchHistory ? searchHistory.getTop(term, 6) : [];
            var autofill_input;
            var autofill_attr;
            if (lastTerm.length < term.length && term.length > 4)
            {
                for (var i = 0; i < last_loaded_web_suggestions.length && suggests_array.length < 11; i++)
                {
                    if (last_loaded_web_suggestions[i].term.toLowerCase() != term.toLowerCase() &&
                        last_loaded_web_suggestions[i].term.toLowerCase().indexOf(term.toLowerCase()) >= 0 &&
                        (!window.searchHistory || !searchHistory.similarExists(suggests_array, last_loaded_web_suggestions[i]))) 
                    {
                        suggests_array.push(last_loaded_web_suggestions[i]);
                        if (!autofill_input && term.toLowerCase() != last_loaded_web_suggestions[i].term.toLowerCase() &&
                           last_loaded_web_suggestions[i].term.toLowerCase().indexOf(term.toLowerCase()) == 0)
                        {
                            autofill_input = last_loaded_web_suggestions[i].term;
                            autofill_attr = autofill_input;
                        }
                    }
                }
            }
            if (suggests_array && suggests_array.length)
            {
                var tmp_autofill_input = suggests_array[0].term || suggests_array[0].url;
                if (lastTerm.length < term.length && term != tmp_autofill_input && tmp_autofill_input.toLowerCase().indexOf(term.toLowerCase()) == 0)
                {
                    autofill_input = tmp_autofill_input;
                    autofill_attr = suggests_array[0].url || suggests_array[0].term;
                }
                if (autofill_input)
                {
                    autoFill(autofill_input);
                    search_form.attr('autofill', autofill_attr);
                }
                show(suggests_array);
            }

            var suggest_url = current_searcher.suggest.url + '?' + current_searcher.suggest.value_name + '=' + encodeURIComponent(term);
            for (var key in current_searcher.suggest.params)
            {
                suggest_url += '&' + key + '=' + current_searcher.suggest.params[key];
            }
            if (term.length > 1)
            {
                $.ajax({
                    url: suggest_url,
                    dataType: 'jsonp',
                    success: onloadSuggestions
                });
            }
        }
        else
        {
            hide();
        }
    }
    
    function onloadSuggestions(resp) {
        if (pause || !search_input.val())
        {
            return;
        }
        var suggests_array;
        try
        {
            suggests_array = current_searcher.suggest.parse(resp);
        }
        catch(e)
        {
            return;
        }
        
        if (suggests_array && suggests_array instanceof Array && suggests_array.length)
        {
            last_loaded_web_suggestions = suggests_array;
        }
    };

    search_input.on('focus', function() {
        pause = false;
    });
    
    var key_flag = false;
    search_input.on("keyup", function(e) {
        var keyCode = e.keyCode ? e.keyCode : e.which;
        switch (keyCode)
        {
            case 27: //Esc
                hide();
                search_input.val('');
                break;
                
            case 37:
                break;

            case 38:
                break;

            case 39:
                curTerm = search_input.val();
                break;

            case 40:
                break;

            case 13:
                break;
                
            case 16:
                break;
            case 17:
                break;
            case 18:
                break;
            case 20:
                break;
            case 91:
                break;

            default:
                key_flag && findSuggestions(this.value);
                break;
        }
        key_flag = false;
    });
    
    search_input.on("keydown", function(e) {
        key_flag = true;
        var keyCode = e.keyCode ? e.keyCode : e.which;
        switch (keyCode)
        {
            case 40:
                e.preventDefault();
                var childs = autocomplete.find('div');
                if (autocomplete_id < childs.length)
                {
                    autocomplete_id++;
                    var selected = autocomplete.find(".selected");
                    if (selected)
                    {
                        selected.removeClass("selected");
                    }
                    $(childs[autocomplete_id - 1]).addClass("selected");
                    onSuggestionSelect(childs[autocomplete_id - 1]);
                }
                break;
            case 38:
                e.preventDefault();
                var childs = autocomplete.find('div');
                if (autocomplete_id == 0) 
                {
                    autocomplete_id = childs.length + 1;
                }
                if (autocomplete_id > 1)
                {
                    autocomplete_id--;
                    var selected = autocomplete.find(".selected");
                    if (selected)
                    {
                        selected.removeClass("selected");
                    }
                    $(childs[autocomplete_id - 1]).addClass("selected");
                    onSuggestionSelect(childs[autocomplete_id - 1]);
                }
                break;
            default:
                break;
        }
    });
    
    return {
        stop: function() {
            pause = true;
        },
        hide: hide
    }
}

function createGridItem(site) {
    var isBrowser = /^(chrome:\/\/|about:)/.test(site.url);
    if (!site.title)
    {
        var url = site.url.match("^https?://([^:/\\?#]+)(?::[^/\\?#]+)?.*$");
        if (url && url[1])
        {
            site.title = url[1];
        }
        else
        {
            site.title = site.url;
        }
        saveSites();
    }
    if (!isBrowser && !site.icon)
    {
        var img = new Image();
        img.onload = function() {
            var favimg = $('.grid__item[x_url="' + site.url + '"]').find('.preview-tab__name-ico img');
            favimg.attr('src', img.src);
            site.icon = img.src;
            saveSites();
        };
        img.onerror = function() {
            img.src = 'https://www.google.com/s2/favicons?domain=' + site.title;
            site.icon = img.src;
            saveSites();
        }
        img.src = 'https://' + site.title + '/favicon.ico';
    }
    if (!isBrowser && !site.screen)
    {
        if (window.FileReader)
        {
            var xhr = getXMLHttpRequest();
            xhr.onload = function() {
                var reader = new FileReader();
                reader.onload = function(event) {
                    var dataUri = event.target.result;
                    var screenImg = $('.grid__item[x_url="' + site.url + '"] .preview-tab__picture-wrapper img');
                    screenImg.attr('src', dataUri);
                    site.screen = dataUri;
                    saveSites();
                };
                reader.onerror = function(event) {
                    var screenImg = $('.grid__item[x_url="' + site.url + '"] .preview-tab__picture-wrapper img');
                    screenImg.attr('src', getScreenApi + encodeURIComponent(site.url));
                };
                reader.readAsDataURL(this.response);
            }
            xhr.open('GET', getScreenApi + encodeURIComponent(site.url));
            xhr.responseType = 'blob';
            xhr.send();
        }
        else
        {
            site.screen = getScreenApi + encodeURIComponent(site.url);
        }
    }
    
    var addClass = '';
    if (site['class'])
    {
        addClass = site['class'];
    }
    return $('<div class="grid__item ' + addClass + '" x_url="' + site.url + '">\
                <div class="preview-tab">\
                  <div class="preview-tab__close">&times;</div>\
                  <a href="' + site.url + '" target="_top" onclick="return trackOutboundLink(this);" class="preview-tab__picture-wrapper">\
                    <div class="preview-tab__picture">\
                      <img src="' + site.screen + '" alt="">\
                    </div>\
                  </a>\
                  <div class="preview-tab__name">\
                    <div class="preview-tab__name-ico"><img src="' + site.icon + '" alt=""></div>\
                    <div class="preview-tab__name-text">' + site.title + '</div>\
                  </div>\
                </div>\
              </div>');
}

function getXMLHttpRequest() {
    if (window.XMLHttpRequest)
    {
        return new window.XMLHttpRequest;
    } 
    else
    {
        try
        {
            return new ActiveXObject("MSXML2.XMLHTTP.3.0");
        }
        catch (ex)
        {
            return null;
        }
    }
}

function onGridItemClick(event) {
    var _this = $(this).closest('.grid__item');
    if (_this.hasClass("hided"))
    {
        event.preventDefault();
        var url = _this.attr('x_url');
        _this.removeClass("hided");
        _this.insertBefore(plus_btn);

        if (standart_sites[url])
        {
            var site = standart_sites[url];
            site.hided = false;
        }

        index_mas.addElement(url);
        saveSites();
        
        toogleAddingTabPanel();
    }
}

function onGridItemClose(event) {
    var _this = $(this).closest('.grid__item');
    var url = _this.attr('x_url');
    event.preventDefault();

    if (!_this.hasClass('user'))
    {
        _this.addClass("hided");
        _this.appendTo(popular_sites_div);
    }
    else
    {
        _this.remove();
    }
    
    if (standart_sites[url])
    {
        var site = standart_sites[url];
        site.hided = true;
        index_mas.addElement(url);
        saveSites();
    }
    else if (user_sites[url])
    {
        var site = user_sites[url];
        delete user_sites[url];
        index_mas.removeElement(url);
        saveSites();
    }
    
    
    
    if ($('.hided').length)
    {
        $('.popupar_heading').css('display', '');
    }
}

function updateSites() {
    $('#addedSites .grid__item:not(.addButton)').remove();
    
    if (window.is_typ)
    {
        return;
    }
    
    for (var i = 0; i < index_mas.length; i++)
    {
        var key = index_mas[i];
        var site = user_sites[key] || standart_sites[key];
        if (!site)
        {
            continue;
        }
        
        var grid = createGridItem(site);
        
        if (!site.hided)
        {
            grid.insertBefore(plus_btn);
        }
        else
        {
            grid.addClass('hided');
            grid.appendTo(popular_sites_div);
        }
        grid.on("click", '.preview-tab__close', onGridItemClose);
        grid.on("click", '.preview-tab__picture', onGridItemClick);
    }
}

function addNewSite(form) {
    var url = $(form).find('input').val().toLowerCase().trim();
    if (url)
    {
        if (!url.match(/^(http|https|chrome|about):.*/))
        {
            url = "http://" + url;
        }

        if (url[url.length - 1] == '/')
        {
            url = url.substr(0, url.length - 1);
        }

        var site = {};

        if (index_mas[url])
        {
            index_mas.removeElement(url);
        }
        if (user_sites[url])
        {
            site = user_sites[url];
            index_mas.addElement(url);
            var grid = $('.grid__item[x_url="' + site.url + '"]');
            grid.insertBefore(plus_btn);
        }
        else if (standart_sites[url])
        {
            site = standart_sites[url];
            site.hided = false;
            index_mas.addElement(url);
            var grid = $('.grid__item[x_url="' + site.url + '"]');
            grid.removeClass("hided");
            grid.insertBefore(plus_btn);
        }
        else
        {
            site.url = url;
            site.screen = '';
            site.icon = '';
            site['class'] = 'user';
            user_sites[url] = site;
            index_mas.addElement(url);
            var grid = createGridItem(site);
            grid.addClass('user');
            grid.insertBefore(plus_btn).on("click", '.preview-tab__close', onGridItemClose);
        }

        saveSites();
        toogleAddingTabPanel();
    }
    
    return false;
}

function init_sites() {
    getSites();
    getTopSites();
    updateSites();
    updateTopSites();
    freeSearchField();
}

function insertExtPromoButtonIfNeed() {
    var isFF = window.navigator.userAgent.indexOf("Firefox/") > 0;
    var isChromium = !!(window.chrome && window.chrome.webstore);
    var chrome_url = "https://chrome.google.com/webstore/detail/kmfgdllhehfhcgkdnnoejlpoipafahhc";
    var ff_url = "https://addons.mozilla.org/firefox/addon/new_tab_minimal/";
    
    if ((!isChromium && !isFF) || window != window.top)
    {
        return;
    }
    
    var btn;
    
    function extInstalled() {
        return $('.main-footer .newtabCheckbox').length > 0;
    }
    
    function addOnClickListeners() {
        $('.installLink:not(.linked)').attr('href', (isFF ? ff_url : chrome_url));
        var lang_in_query = location.search.match(/utm_source=(.*)_extensions/) || '';
        if (lang_in_query && lang_in_query.length > 1)
        {
            lang_in_query = lang_in_query[1];
        }
        !isFF && $('#thank_you_head_section .installLink:not(.linked)').attr('href', chrome_url + '?utm_source=' + lang_in_query + '_shapka');
    /*    $('.installLink:not(.linked)').on('click', function (e) {
            if (isChromium)
            {
                e.preventDefault();
                window.chrome.webstore.install(chrome_url, function() {
                    ga && ga('send', 'event', 'Installation', 'Install');
                }, 
                function() {
                    ga && ga('send', 'event', 'Installation', 'Cancel');
                });
            }
        });*/
        $('.installLink:not(.linked)').addClass('linked');
    }

    localStorage['last_check_ext_installed'] = '0';
    
    var observe_target = $('.main-footer .grid-wrapper>p')[0];
    if (observe_target)
    {
        var observer = new MutationObserver(function() {
            if (extInstalled())
            {
                localStorage['last_check_ext_installed'] = '1';
                btn && btn.remove();
                observer.disconnect();
            }
        });
        observer.observe(observe_target, { childList: true });
    }
    addOnClickListeners();
}

$(document).ready(function() {
    $('.lang_selector').change(function() {
        var selected_lang = $(this).val();
        localize(selected_lang);
        init_sites();
    });
    $(document).click(function(e) {
        if (!$("#autocomplete").hasClass('hidden') && !$(e.target).is('.autocomplete_element'))
        {
            suggestions && suggestions.hide();
            $('#search_form .input').focus();
        }
    });

   

    $(".new-tab-adding").hide();
    $(".preview-tab_new").click(function() {
        toogleAddingTabPanel();
    });
    
    $("#search_form").submit(function() {
        return search(this);
    });

    $(".new-tab-adding__form form").submit(function() {
        return addNewSite(this);
    });
    
    $('#search_form .input').keydown(function(e) {
        if (e.keyCode == 13)
        {
            set_Data_URL_for_form_if_need($('#search_form').attr('autofill') || this.value.trim());
        }
    });
    $('#search_form button').click(function() {
        set_Data_URL_for_form_if_need($('#search_form').attr('autofill') || $('#search_form .input').val().trim());
    });
    
    plus_btn = $(".grid__item.addButton");
    popular_sites_div = $("#popularSites");

    localize();
    
    var set_searcher = 'google';
    setSearchEngine(set_searcher, true);
    
    suggestions = init_suggestions();
    init_sites();
    window.scrollTo(0, 0);
    insertExtPromoButtonIfNeed();
});

function getCookie(name) {
    var matches = document.cookie.match(new RegExp(
        "(?:^|; )" + name.replace(/([\.$?*|{}\(\)\[\]\\\/\+^])/g, '\\$1') + "=([^;]*)"
    ));
    return matches ? decodeURIComponent(matches[1]) : undefined;
}
function setCookie(name, value, options) {
    options = options || {};

    var expires = options.expires;

    if (typeof expires == "number" && expires)
    {
        var d = new Date();
        d.setTime(d.getTime() + expires * 1000);
        expires = options.expires = d;
    }
    if (expires && expires.toUTCString)
    {
        options.expires = expires.toUTCString();
    }

    value = encodeURIComponent(value);

    var updatedCookie = name + "=" + value;

    for (var propName in options)
    {
        updatedCookie += "; " + propName;
        var propValue = options[propName];
        if (propValue !== true)
        {
            updatedCookie += "=" + propValue;
        }
    }

    document.cookie = updatedCookie;
}

Array.prototype.removeElement = function(elem) {
    var ind = this.indexOf(elem);
    if (ind >= 0)
    {
        this.splice(ind, 1);
    }
};
Array.prototype.addElement = function(elem) {
    var ind = this.removeElement(elem);
    this.push(elem);
};
if (!Array.prototype.indexOf)
{
    Array.prototype.indexOf = function (elt, from) {
        var len = this.length >>> 0;
        var from = Number(arguments[1]) || 0;
        from = (from < 0) ? Math.ceil(from) : Math.floor(from);
        if (from < 0)
        {
            from += len;
        }

        for (; from < len; from++)
        {
            if (from in this && this[from] === elt)
            {
                return from;
            }
        }
        return -1;
    };
}
if (!String.prototype.trim)
{
    String.prototype.trim = function() {
        return this.replace(/^\s+|\s+$/g, ''); 
    }
}